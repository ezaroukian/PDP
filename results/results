#
# Results on Tuesday August 09 2016 19:20:29 UTC.
# USER AGENT: Mozilla/5.0 (Windows NT 6.1; Win64; x64; Trident/7.0; rv:11.0) like Gecko
# Design number was non-random = 48
#
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Field name.
# 9. Field value.
1470770430,e759d2b9be063895dd372ecdfb835e1f,Form,0,0,intro,NULL,Age,
1470770430,e759d2b9be063895dd372ecdfb835e1f,Form,0,0,intro,NULL,logicBackground,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,110,0,CE.0Al.0.simple.0.49.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">there is a golfer named Sue.</span><br/><img src="http://ezaroukian.github.io/pdp/0Al.png" height="360">,yes,1,282732
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,112,0,CE.0Al.0.simple.1.50.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">there is a golfer named Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/0Al.png" height="360">,yes,0,608
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,114,0,CE.0Bl.0.simple.0.51.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">the person Sue sees the person Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/0Bl.png" height="360">,yes,1,776
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,116,0,CE.0Bl.0.simple.1.52.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">the person Bill sees the person Sue.</span><br/><img src="http://ezaroukian.github.io/pdp/0Bl.png" height="360">,yes,0,1199
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,118,0,CE.0Cl.0.simple.0.53.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">the person Sue sees the present p1.</span><br/><img src="http://ezaroukian.github.io/pdp/0Cl.png" height="360">,yes,1,498
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,120,0,CE.0Cl.0.simple.1.54.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">the person Bill sees the present p1.</span><br/><img src="http://ezaroukian.github.io/pdp/0Cl.png" height="360">,yes,0,480
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,36,0,CE.2Bl.1.complex.1.12.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person Lisa inspects the aquarium a2.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,yes,0,3612
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,632
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,22,0,CE.3Cl.1.complex.0.5.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Mary admires the present p1 and the person Mary helps the person Kate.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,NULL,NULL,11015
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,1,NULL,147303
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,44,0,CE.3Al.1.simple.0.16.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Lisa loves the present p3.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,NULL,NULL,11010
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,1,NULL,30619
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,28,0,CE.3Al.1.complex.1.8.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Sue loves the person Tom and the person Tom loves the person Lisa.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,NULL,NULL,11013
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,1,NULL,4659
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,38,0,CE.2Bl.1.complex.0.13.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person Lisa admires the person Tom.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,NULL,NULL,11015
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,1,NULL,113890
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,26,0,CE.2Bl.1.complex.0.7.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Sue admires the person Paul and the person Lisa admires the person Paul.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,NULL,NULL,11013
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,1,NULL,73019
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,24,0,CE.2Bl.1.complex.1.6.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Paul admires the aquarium a1 and inspects the letter l2.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,NULL,NULL,11009
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,1,NULL,38562
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,58,0,CE.2Bl.1.simple.1.23.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Lisa inspects the person Paul.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,yes,0,4009
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,237
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,52,0,CE.2Bl.1.simple.0.20.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Tom admires the person Lisa.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,yes,1,176
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,76
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,56,0,CE.2Al.1.simple.1.22.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Tom sees the person John.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,yes,0,47
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,67
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,20,0,CE.2Al.1.complex.0.4.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person John sees the person Lisa and buys the present pres2.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,yes,1,102
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,67
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,14,0,CE.2Bl.1.simple.0.1.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">there is a traveler named Sue.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,yes,1,123
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,61
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,40,0,CE.3Cl.1.complex.0.14.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person Kate admires the person Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,yes,1,120
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,43
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,16,0,CE.2Bl.1.simple.1.2.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">there is an officer named Tom.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,yes,0,155
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,49
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,48,0,CE.3Al.1.simple.1.18.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Tom buys the present p1.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,yes,0,182
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,49
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,32,0,CE.3Al.1.complex.0.10.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person Tom sees the aquarium a1.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,yes,1,159
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,74
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,54,0,CE.3Cl.1.simple.0.21.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Kate helps the person Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,yes,1,151
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,68
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,60,0,CE.3Cl.1.simple.1.24.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Mary helps the person Tom.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,yes,0,114
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,109
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,46,0,CE.3Cl.1.simple.0.17.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Tom sees the tv t1.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,yes,1,218
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,69
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,18,0,CE.3Cl.1.simple.1.3.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">there is a traveler named Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,yes,0,281
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,65
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,50,0,CE.2Al.1.simple.0.19.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Mary sees the person Lisa.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,yes,1,201
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,48
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,42,0,CE.3Cl.1.complex.1.15.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person Bill admires the person Mary.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,yes,0,189
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,58
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,30,0,CE.3Cl.1.complex.1.9.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Tom helps the person Kate and the person Mary admires the person Kate.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,yes,0,199
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,67
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,34,0,CE.2Al.1.complex.1.11.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person Tom buys the present pres1.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,yes,0,255
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,83
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,122,0,CE.1.p.1,NULL,I think that I would use this system frequently.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,122,0,CE.1.p.1,NULL,NULL,5,NULL,16691
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,126,0,CE.1.n.2,NULL,I found the system unnecessarily complex.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,126,0,CE.1.n.2,NULL,NULL,5,NULL,1010
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,130,0,CE.1.p.3,NULL,I thought the system was easy to use.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,130,0,CE.1.p.3,NULL,NULL,5,NULL,118
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,134,0,CE.1.n.4,NULL,I think that I would need the support of a technical person to be able to use this system.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,134,0,CE.1.n.4,NULL,NULL,5,NULL,118
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,138,0,CE.1.p.5,NULL,I found the various functions in this system were well integrated.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,138,0,CE.1.p.5,NULL,NULL,5,NULL,131
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,142,0,CE.1.n.6,NULL,I thought there was too much inconsistency in this system.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,142,0,CE.1.n.6,NULL,NULL,5,NULL,161
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,146,0,CE.1.p.7,NULL,I would imagine that most people would learn to use this system very quickly.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,146,0,CE.1.p.7,NULL,NULL,5,NULL,135
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,150,0,CE.1.n.8,NULL,I found the system very cumbersome to use.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,150,0,CE.1.n.8,NULL,NULL,5,NULL,153
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,154,0,CE.1.p.9,NULL,I felt very confident using the system.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,154,0,CE.1.p.9,NULL,NULL,5,NULL,143
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,158,0,CE.1.n.10,NULL,I needed to learn a lot of things before I could get going with this system.
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,158,0,CE.1.n.10,NULL,NULL,5,NULL,185
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,109,0,NL.0Al.0.simple.0.49.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Sue is a golfer.</span><br/><img src="http://ezaroukian.github.io/pdp/0Al.png" height="360">,yes,1,528
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,111,0,NL.0Al.0.simple.1.50.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Bill is a golfer.</span><br/><img src="http://ezaroukian.github.io/pdp/0Al.png" height="360">,yes,0,114494
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,113,0,NL.0Bl.0.simple.0.51.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Sue sees Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/0Bl.png" height="360">,yes,1,420
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,115,0,NL.0Bl.0.simple.1.52.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Bill sees Sue.</span><br/><img src="http://ezaroukian.github.io/pdp/0Bl.png" height="360">,yes,0,496
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,117,0,NL.0Cl.0.simple.0.53.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Sue sees a present.</span><br/><img src="http://ezaroukian.github.io/pdp/0Cl.png" height="360">,yes,1,411
1470770430,e759d2b9be063895dd372ecdfb835e1f,PracticeQuestion,119,0,NL.0Cl.0.simple.1.54.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Bill sees a present.</span><br/><img src="http://ezaroukian.github.io/pdp/0Cl.png" height="360">,yes,0,388
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,85,0,NL.2Al.2.complex.0.37.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">John doesn't see Mary.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,yes,1,763
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,43
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,103,0,NL.2Cl.2.simple.1.46.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Kate sees John.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,yes,0,320
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,71
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,69,0,NL.2Cl.2.complex.1.29.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Kate loves John and sees an aquarium.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,yes,0,261
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,65
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,107,0,NL.3Bl.2.simple.1.48.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Paul inspects John.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,yes,0,327
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,73
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,61,0,NL.2Cl.2.simple.0.25.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Bill is an officer.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,yes,1,313
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,50
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,83,0,NL.2Cl.2.complex.1.36.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">John doesn't love a TV.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,yes,0,335
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,67
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,81,0,NL.2Cl.2.complex.0.35.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Bill doesn't love a TV.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,yes,1,258
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,48
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,87,0,NL.3Al.2.complex.1.38.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Sue doesn't see Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,yes,0,259
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,17
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,97,0,NL.2Cl.2.simple.0.43.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Kate loves John.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,yes,1,292
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,19
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,77,0,NL.2Al.2.complex.1.33.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Lisa and Mary see Tom.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,yes,0,1504
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,35
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,75,0,NL.3Al.2.complex.0.32.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Tom and Bill love Sue.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,yes,1,282
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,81
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,101,0,NL.3Bl.2.simple.0.45.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Lisa inspects a letter.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,yes,1,3229
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,76
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,65,0,NL.3Bl.2.simple.1.27.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Lisa is a golfer.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,yes,0,3708
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,53
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,95,0,NL.2Cl.2.simple.1.42.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Mary sees a TV.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,yes,0,3364
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,50
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,67,0,NL.3Bl.2.complex.0.28.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Paul sees Lisa and Lisa inspects a letter.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,yes,1,3495
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,70
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,79,0,NL.3Bl.2.complex.0.34.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">John doesn't inspect a picture.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,yes,1,3316
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,98
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,63,0,NL.3Al.2.simple.0.26.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Sue is an officer.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,yes,1,3634
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,57
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,91,0,NL.2Al.2.simple.0.40.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">John buys a picture.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,yes,1,3062
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,66
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,93,0,NL.2Al.2.simple.1.41.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Mary buys a present.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,yes,0,2737
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,66
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,105,0,NL.3Al.2.simple.1.47.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Bill sees Lisa.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,yes,0,3052
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,89
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,89,0,NL.3Bl.2.complex.1.39.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Paul doesn't help John.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,yes,0,3348
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,57
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,99,0,NL.3Bl.2.simple.0.44.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Paul helps Lisa.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,yes,1,3314
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,105
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,73,0,NL.2Cl.2.complex.0.31.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Mary loves Kate and John.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,yes,1,3277
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,47
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,71,0,NL.3Bl.2.complex.1.30.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Lisa helps John and sees a picture.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,yes,0,4648
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,63
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,123,0,NL.2.p.1,NULL,I think that I would use this system frequently.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,123,0,NL.2.p.1,NULL,NULL,5,NULL,1198
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,127,0,NL.2.n.2,NULL,I found the system unnecessarily complex.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,127,0,NL.2.n.2,NULL,NULL,5,NULL,316
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,131,0,NL.2.p.3,NULL,I thought the system was easy to use.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,131,0,NL.2.p.3,NULL,NULL,5,NULL,189
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,135,0,NL.2.n.4,NULL,I think that I would need the support of a technical person to be able to use this system.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,135,0,NL.2.n.4,NULL,NULL,5,NULL,185
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,139,0,NL.2.p.5,NULL,I found the various functions in this system were well integrated.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,139,0,NL.2.p.5,NULL,NULL,5,NULL,225
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,143,0,NL.2.n.6,NULL,I thought there was too much inconsistency in this system.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,143,0,NL.2.n.6,NULL,NULL,5,NULL,244
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,147,0,NL.2.p.7,NULL,I would imagine that most people would learn to use this system very quickly.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,147,0,NL.2.p.7,NULL,NULL,1,NULL,1278
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,151,0,NL.2.n.8,NULL,I found the system very cumbersome to use.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,151,0,NL.2.n.8,NULL,NULL,1,NULL,181
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,155,0,NL.2.p.9,NULL,I felt very confident using the system.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,155,0,NL.2.p.9,NULL,NULL,1,NULL,188
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,159,0,NL.2.n.10,NULL,I needed to learn a lot of things before I could get going with this system.
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Field name.
#     Col. 9: Field value.
1470770430,e759d2b9be063895dd372ecdfb835e1f,AcceptabilityJudgment,159,0,NL.2.n.10,NULL,NULL,1,NULL,310
1470770430,e759d2b9be063895dd372ecdfb835e1f,Form,5,0,endSurvey,NULL,feedback,test
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1470770430,e759d2b9be063895dd372ecdfb835e1f,Question,6,0,endSurvey,NULL,232914,NULL,NULL,8
#
# Results on Wednesday August 17 2016 16:47:31 UTC.
# USER AGENT: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
# Design number was non-random = 49
#
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Field name.
# 9. Field value.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Form,0,0,intro,NULL,Age,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Form,0,0,intro,NULL,logicBackground,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,109,0,NL.0Al.0.simple.0.49.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Sue is a golfer.</span><br/><img src="http://ezaroukian.github.io/pdp/0Al.png" height="360">,no,0,14779
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,111,0,NL.0Al.0.simple.1.50.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Bill is a golfer.</span><br/><img src="http://ezaroukian.github.io/pdp/0Al.png" height="360">,yes,0,2543
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,113,0,NL.0Bl.0.simple.0.51.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Sue sees Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/0Bl.png" height="360">,yes,1,747
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,115,0,NL.0Bl.0.simple.1.52.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Bill sees Sue.</span><br/><img src="http://ezaroukian.github.io/pdp/0Bl.png" height="360">,yes,0,231
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,117,0,NL.0Cl.0.simple.0.53.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Sue sees a present.</span><br/><img src="http://ezaroukian.github.io/pdp/0Cl.png" height="360">,yes,1,11
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,119,0,NL.0Cl.0.simple.1.54.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">Bill sees a present.</span><br/><img src="http://ezaroukian.github.io/pdp/0Cl.png" height="360">,yes,0,68
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,39,0,NL.3Cl.1.complex.0.14.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Kate doesn't admire Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,NULL,NULL,11004
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,4,NULL,87397
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,37,0,NL.2Bl.1.complex.0.13.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Lisa doesn't admire Tom.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,NULL,NULL,11011
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,4,NULL,50229
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,47,0,NL.3Al.1.simple.1.18.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Tom buys a present. </span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,NULL,NULL,11009
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,4,NULL,14580
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,27,0,NL.3Al.1.complex.1.8.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Sue loves Tom and Tom loves Lisa.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,NULL,NULL,11008
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,1581
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,33,0,NL.2Al.1.complex.1.11.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Tom doesn't buy a present.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,NULL,NULL,11005
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,1,NULL,6443
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,57,0,NL.2Bl.1.simple.1.23.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Lisa inspects Paul.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,NULL,NULL,11011
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,41051
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,55,0,NL.2Al.1.simple.1.22.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Tom sees John.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,NULL,NULL,11004
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,21433
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,59,0,NL.3Cl.1.simple.1.24.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Mary helps Tom.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,NULL,NULL,11010
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,1,NULL,6134
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,51,0,NL.2Bl.1.simple.0.20.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Tom admires Lisa.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,NULL,NULL,11007
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,1,NULL,157770
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,53,0,NL.3Cl.1.simple.0.21.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Kate helps Bill. </span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,NULL,NULL,11007
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,7,NULL,16845
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,13,0,NL.2Bl.1.simple.0.1.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Sue is a traveler.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,NULL,NULL,11007
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,35403
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,49,0,NL.2Al.1.simple.0.19.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Mary sees Lisa.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,yes,1,1324
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,1,NULL,1517
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,31,0,NL.3Al.1.complex.0.10.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Tom doesn't see an aquarium.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,NULL,NULL,11004
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,17348
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,45,0,NL.3Cl.1.simple.0.17.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Tom sees a TV.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,yes,1,1456
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,981
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,15,0,NL.2Bl.1.simple.1.2.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Tom is an officer.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,NULL,NULL,11002
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,4,NULL,40552
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,35,0,NL.2Bl.1.complex.1.12.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Lisa doesn't inspect an aquarium</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,yes,0,1052
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,1,NULL,805
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,17,0,NL.3Cl.1.simple.1.3.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Bill is a traveler.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,NULL,NULL,11016
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,42329
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,43,0,NL.3Al.1.simple.0.16.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Lisa loves a present.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,yes,1,970
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,1235
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,29,0,NL.3Cl.1.complex.1.9.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Tom helps Kate and Mary admires Kate.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,NULL,NULL,11014
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,77316
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,23,0,NL.2Bl.1.complex.1.6.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Paul admires an aquarium and inspects a letter.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,yes,0,2110
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,762
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,19,0,NL.2Al.1.complex.0.4.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">John sees Lisa and John buys a present.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,NULL,NULL,10999
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,4,NULL,2419
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,41,0,NL.3Cl.1.complex.1.15.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Bill doesn't admire Mary.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,yes,0,1275
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,790
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,21,0,NL.3Cl.1.complex.0.5.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Mary admires a present and helps Kate.</span><br/><img src="http://ezaroukian.github.io/pdp/3Cl.png" height="360">,NULL,NULL,11024
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,2968
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,25,0,NL.2Bl.1.complex.0.7.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">Sue and Lisa admire Paul.</span><br/><img src="http://ezaroukian.github.io/pdp/2Bl.png" height="360">,no,0,1037
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,1196
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,121,0,NL.1.p.1,NULL,I think that I would use this system frequently.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,121,0,NL.1.p.1,NULL,NULL,1,NULL,1334
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,125,0,NL.1.n.2,NULL,I found the system unnecessarily complex.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,125,0,NL.1.n.2,NULL,NULL,2,NULL,314
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,129,0,NL.1.p.3,NULL,I thought the system was easy to use.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,129,0,NL.1.p.3,NULL,NULL,3,NULL,300
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,133,0,NL.1.n.4,NULL,I think that I would need the support of a technical person to be able to use this system.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,133,0,NL.1.n.4,NULL,NULL,4,NULL,330
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,137,0,NL.1.p.5,NULL,I found the various functions in this system were well integrated.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,137,0,NL.1.p.5,NULL,NULL,5,NULL,332
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,141,0,NL.1.n.6,NULL,I thought there was too much inconsistency in this system.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,141,0,NL.1.n.6,NULL,NULL,4,NULL,284
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,145,0,NL.1.p.7,NULL,I would imagine that most people would learn to use this system very quickly.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,145,0,NL.1.p.7,NULL,NULL,3,NULL,235
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,149,0,NL.1.n.8,NULL,I found the system very cumbersome to use.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,149,0,NL.1.n.8,NULL,NULL,2,NULL,237
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,153,0,NL.1.p.9,NULL,I felt very confident using the system.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,153,0,NL.1.p.9,NULL,NULL,1,NULL,347
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,157,0,NL.1.n.10,NULL,I needed to learn a lot of things before I could get going with this system.
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,157,0,NL.1.n.10,NULL,NULL,2,NULL,293
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,110,0,CE.0Al.0.simple.0.49.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">there is a golfer named Sue.</span><br/><img src="http://ezaroukian.github.io/pdp/0Al.png" height="360">,yes,1,2190
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,112,0,CE.0Al.0.simple.1.50.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">there is a golfer named Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/0Al.png" height="360">,yes,0,324
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,114,0,CE.0Bl.0.simple.0.51.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">the person Sue sees the person Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/0Bl.png" height="360">,yes,1,337
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,116,0,CE.0Bl.0.simple.1.52.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">the person Bill sees the person Sue.</span><br/><img src="http://ezaroukian.github.io/pdp/0Bl.png" height="360">,yes,0,323
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,118,0,CE.0Cl.0.simple.0.53.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">the person Sue sees the present p1.</span><br/><img src="http://ezaroukian.github.io/pdp/0Cl.png" height="360">,yes,1,392
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,PracticeQuestion,120,0,CE.0Cl.0.simple.1.54.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) );  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var timeinterval = setInterval(function(){    var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}      }%2C1000);</script><br/><br/><span class="q">the person Bill sees the present p1.</span><br/><img src="http://ezaroukian.github.io/pdp/0Cl.png" height="360">,yes,0,397
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,76,0,CE.3Al.2.complex.0.32.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Tom loves the person Sue and the person Bill loves the person Sue.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,yes,1,644
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,67
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,82,0,CE.2Cl.2.complex.0.35.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person Bill loves the TV t2.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,yes,1,349
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,124
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,102,0,CE.3Bl.2.simple.0.45.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Lisa inspects the letter l1.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,yes,1,293
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,75
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,64,0,CE.3Al.2.simple.0.26.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">there is an officer named Sue.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,yes,1,303
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,75
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,100,0,CE.3Bl.2.simple.0.44.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Paul helps the person Lisa.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,yes,1,257
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,58
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,86,0,CE.2Al.2.complex.0.37.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person John sees the person Mary.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,yes,1,207
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,52
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,92,0,CE.2Al.2.simple.0.40.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person John buys the picture pic2.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,yes,1,206
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,56
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,108,0,CE.3Bl.2.simple.1.48.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Paul inspects the person John.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,no,1,674
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,43
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,66,0,CE.3Bl.2.simple.1.27.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">there is a golfer named Lisa.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,no,1,427
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,5,NULL,68
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,90,0,CE.3Bl.2.complex.1.39.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person Paul helps the person John.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,no,1,329
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,4,NULL,197
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,96,0,CE.2Cl.2.simple.1.42.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Mary sees the tv t1.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,no,1,144
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,4,NULL,75
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,74,0,CE.2Cl.2.complex.0.31.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Mary loves the person Kate and loves the person John.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,no,0,385
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,184
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,78,0,CE.2Al.2.complex.1.33.0.1.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Lisa sees the person Tom and the person Mary sees the person Tom.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,no,1,295
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,42
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,88,0,CE.3Al.2.complex.1.38.0.0.1.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person Sue sees the person Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,no,1,256
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,51
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,104,0,CE.2Cl.2.simple.1.46.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Kate sees the person John. </span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,no,1,278
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,49
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,84,0,CE.2Cl.2.complex.1.36.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person John loves the TV t2.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,no,1,290
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,59
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,70,0,CE.2Cl.2.complex.1.29.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Kate loves the person John and sees the aquarium a1.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,no,1,263
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,3,NULL,43
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,68,0,CE.3Bl.2.complex.0.28.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Paul sees the person Lisa and the person Lisa inspects the letter l1.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,no,0,960
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,129
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,94,0,CE.2Al.2.simple.1.41.0.0.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Mary buys the present pres1.</span><br/><img src="http://ezaroukian.github.io/pdp/2Al.png" height="360">,no,1,391
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,85
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,98,0,CE.2Cl.2.simple.0.43.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Kate loves the person John.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,no,0,344
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,69
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,62,0,CE.2Cl.2.simple.0.25.1.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">there is an officer named Bill.</span><br/><img src="http://ezaroukian.github.io/pdp/2Cl.png" height="360">,no,0,368
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,69
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,106,0,CE.3Al.2.simple.1.47.0.0.0.0,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Bill sees the person Lisa.</span><br/><img src="http://ezaroukian.github.io/pdp/3Al.png" height="360">,no,1,376
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,69
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,72,0,CE.3Bl.2.complex.1.30.0.1.0.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">the person Lisa helps the person John and sees the picture p2.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,no,1,360
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,101
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Sentence (or sentence MD5).
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,80,0,CE.3Bl.2.complex.0.34.0.0.1.1,NULL,<div id="clockdiv">seconds remaining: -</div><script> var timeInSeconds = 10; var currentTime = Date.parse(new Date()); var deadline = new Date(currentTime + timeInSeconds*1000); function getTimeRemaining(endtime){  var t = Date.parse(endtime) - Date.parse(new Date());  var seconds = Math.floor( (t/1000) % 60 ); if(seconds<0){seconds=0;}  return {    "total": t%2C    "seconds": seconds  };}</script><script>var t = getTimeRemaining(deadline);    try{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;} catch(err){}</script><script> var intervalId  = setInterval(function(){    var t = getTimeRemaining(deadline);    try{ if(t.seconds<=5){clearInterval(intervalId );} else{document.getElementById("clockdiv").innerHTML = "seconds remaining: " + t.seconds;}} catch(err){}     }%2C1000);</script><br/><br/><span class="q">it is false that the person John inspects the picture p1.</span><br/><img src="http://ezaroukian.github.io/pdp/3Bl.png" height="360">,no,0,346
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,9,0,conf,NULL,How confident are you in the response you just gave?,2,NULL,85
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,124,0,CE.2.p.1,NULL,I think that I would use this system frequently.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,124,0,CE.2.p.1,NULL,NULL,5,NULL,1440
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,128,0,CE.2.n.2,NULL,I found the system unnecessarily complex.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,128,0,CE.2.n.2,NULL,NULL,4,NULL,199
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,132,0,CE.2.p.3,NULL,I thought the system was easy to use.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,132,0,CE.2.p.3,NULL,NULL,3,NULL,213
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,136,0,CE.2.n.4,NULL,I think that I would need the support of a technical person to be able to use this system.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,136,0,CE.2.n.4,NULL,NULL,3,NULL,196
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,140,0,CE.2.p.5,NULL,I found the various functions in this system were well integrated.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,140,0,CE.2.p.5,NULL,NULL,2,NULL,311
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,144,0,CE.2.n.6,NULL,I thought there was too much inconsistency in this system.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,144,0,CE.2.n.6,NULL,NULL,1,NULL,310
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,148,0,CE.2.p.7,NULL,I would imagine that most people would learn to use this system very quickly.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,148,0,CE.2.p.7,NULL,NULL,2,NULL,231
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,152,0,CE.2.n.8,NULL,I found the system very cumbersome to use.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,152,0,CE.2.n.8,NULL,NULL,3,NULL,230
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,156,0,CE.2.p.9,NULL,I felt very confident using the system.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,156,0,CE.2.p.9,NULL,NULL,4,NULL,228
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,160,0,CE.2.n.10,NULL,I needed to learn a lot of things before I could get going with this system.
# The lines below this comment are in groups of 2.
# The formats of the lines in each of these groups are as follows:
#
# Line 1:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Question (NULL if none).
#     Col. 9: Answer.
#     Col. 10: Whether or not answer was correct (NULL if N/A).
#     Col. 11: Time taken to answer.
# Line 2:
#     Col. 1: Time results were received.
#     Col. 2: MD5 hash of participant's IP address.
#     Col. 3: Controller name.
#     Col. 4: Item number.
#     Col. 5: Element number.
#     Col. 6: Type.
#     Col. 7: Group.
#     Col. 8: Field name.
#     Col. 9: Field value.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,AcceptabilityJudgment,160,0,CE.2.n.10,NULL,NULL,5,NULL,283
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Form,5,0,endSurvey,NULL,feedback,test wednesday
# Columns below this comment are as follows:
# 1. Time results were received.
# 2. MD5 hash of participant's IP address.
# 3. Controller name.
# 4. Item number.
# 5. Element number.
# 6. Type.
# 7. Group.
# 8. Question (NULL if none).
# 9. Answer.
# 10. Whether or not answer was correct (NULL if N/A).
# 11. Time taken to answer.
1471452451,cdc4a29e533d6eefda0fc93ef45b6cc7,Question,6,0,endSurvey,NULL,373668,NULL,NULL,117
